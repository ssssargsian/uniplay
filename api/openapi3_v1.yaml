---
openapi: 3.0.3
info:
  title: Uniplay private API
  version: 1.0.0
servers:
- url: http://localhost:8080/v1
tags:
- name: player
  description: Профиль игрока
- name: stat
  description: Статистика игрока
- name: replay
  description: Запись матча
- name: compendium
  description: Справочники
paths:
  /players/{steam_id}:
    get:
      tags:
      - player
      summary: Профиль игрока
      operationId: getPlayerProfile
      parameters:
      - name: steam_id
        in: path
        description: steam id игрока
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: uint64
          x-go-type: uint64
          x-go-name: SteamID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /players/{steam_id}/matches:
    post:
      tags:
      - player
      summary: Список матчей игрока
      operationId: getPlayerMatches
      parameters:
      - name: steam_id
        in: path
        description: steam id игрока
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: uint64
          x-go-type: uint64
          x-go-name: SteamID
      requestBody:
        $ref: '#/components/requestBodies/PlayerMatchListRequestBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchList'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /replays:
    post:
      tags:
      - replay
      summary: Загрузить запись матча
      operationId: uploadReplay
      requestBody:
        $ref: '#/components/requestBodies/ReplayUploadRequestBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /stats/{steam_id}:
    get:
      tags:
      - stat
      summary: Статистика игрока
      operationId: getPlayerStats
      parameters:
      - name: steam_id
        in: path
        description: steam id игрока
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: uint64
          x-go-type: uint64
          x-go-name: SteamID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerStats'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /stats/{steam_id}/weapons:
    get:
      tags:
      - stat
      summary: Статистика игрока по оружию
      operationId: getWeaponStats
      parameters:
      - name: steam_id
        in: path
        description: steam id игрока
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: uint64
          x-go-type: uint64
          x-go-name: SteamID
      - name: weapon_id
        in: query
        description: фильтр по оружию, по умолчанию передавать 0
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: uint16
          x-go-type: uint16
          x-go-name: WeaponID
      - name: class_id
        in: query
        description: фильтр по классу оружия, по умолчанию передавать 0
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: uint8
          x-go-type: uint8
          x-go-name: ClassID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerWeaponStats'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /stats/{steam_id}/weapon-classes:
    get:
      tags:
      - stat
      summary: Статистика игрока по классу оружия
      operationId: getWeaponClassStats
      parameters:
      - name: steam_id
        in: path
        description: steam id игрока
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: uint64
          x-go-type: uint64
          x-go-name: SteamID
      - name: class_id
        in: query
        description: фильтр по классу оружия, по умолчанию передавать 0
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: uint8
          x-go-type: uint8
          x-go-name: ClassID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerWeaponClassStats'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /сompendiums/weapons:
    get:
      tags:
      - compendium
      summary: Справочник оружий
      operationId: getWeaponCompendium
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeaponList'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /сompendiums/weapon-classes:
    get:
      tags:
      - compendium
      summary: Справочник классов оружий
      operationId: getWeaponClassCompendium
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeaponClassList'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
          description: статус ответа или код ошибки >= 600
          format: uint16
          x-go-type: uint16
        message:
          type: string
          description: сообщение ошибки
    Player:
      required:
      - create_time
      - steam_id
      - team_flag_code
      - team_name
      - update_time
      type: object
      properties:
        steam_id:
          type: integer
          format: uint64
          x-go-name: SteamID
          x-go-type: uint64
        team_name:
          type: string
        team_flag_code:
          type: string
        create_time:
          type: string
          description: RFC3339 datetime string
          format: date-time
          x-go-type: time.Time
        update_time:
          type: string
          description: RFC3339 datetime string
          format: date-time
          x-go-type: time.Time
    BasicStats:
      required:
      - headshot_percentage
      - kill_death_ratio
      - matches_played
      - rounds_played
      - time_played
      type: object
      properties:
        kill_death_ratio:
          type: number
          format: double
          x-go-type: float64
        headshot_percentage:
          type: number
          format: double
          x-go-type: float64
        matches_played:
          type: integer
          format: uint16
          x-go-type: uint16
        rounds_played:
          type: integer
          format: uint16
          x-go-type: uint32
        time_played:
          type: integer
          format: int64
          x-go-type: time.Duration
      description: набор высчитываемой статистики на основе метрик
    TotalStats:
      required:
      - assists
      - blind_kills
      - blinded_players
      - blinded_times
      - bombs_defused
      - bombs_planted
      - damage_dealt
      - damage_taken
      - deaths
      - flashbang_assists
      - headshot_kills
      - kills
      - mvp_count
      - noscope_kills
      - through_smoke_kills
      - wallbang_kills
      type: object
      properties:
        kills:
          type: integer
          format: uint32
          x-go-type: uint32
        deaths:
          type: integer
          format: uint32
          x-go-type: uint32
        headshot_kills:
          type: integer
          format: uint32
          x-go-type: uint32
        blind_kills:
          type: integer
          format: uint32
          x-go-type: uint32
        wallbang_kills:
          type: integer
          format: uint32
          x-go-type: uint32
        noscope_kills:
          type: integer
          format: uint32
          x-go-type: uint32
        through_smoke_kills:
          type: integer
          format: uint32
          x-go-type: uint32
        assists:
          type: integer
          format: uint32
          x-go-type: uint32
        flashbang_assists:
          type: integer
          format: uint32
          x-go-type: uint32
        damage_taken:
          type: integer
          format: uint32
          x-go-type: uint32
        damage_dealt:
          type: integer
          format: uint32
          x-go-type: uint32
        bombs_planted:
          type: integer
          format: uint32
          x-go-type: uint32
        bombs_defused:
          type: integer
          format: uint32
          x-go-type: uint32
        blinded_players:
          type: integer
          description: кол-во ослепленных игроков
          format: uint32
          x-go-type: uint32
        blinded_times:
          type: integer
          description: кол-во раз ослеплен
          format: uint32
          x-go-type: uint32
        mvp_count:
          type: integer
          format: uint32
          x-go-type: uint32
      description: общая статистика по сумме метрик игрока
    PerRoundStats:
      required:
      - assists
      - blinded_players
      - blinded_times
      - damage_dealt
      - deaths
      - grenade_damage_dealt
      - kills
      type: object
      properties:
        damage_dealt:
          type: number
          description: средний урон за раунд
          format: double
          x-go-type: float64
        grenade_damage_dealt:
          type: number
          description: средний урон гранатами за раунд
          format: double
          x-go-type: float64
        kills:
          type: number
          description: среднее кол-во убийств за раунд
          format: double
          x-go-type: float64
        assists:
          type: number
          description: среднее кол-во ассистов за раунд
          format: double
          x-go-type: float64
        deaths:
          type: number
          description: среднее кол-во смертей за раунд
          format: double
          x-go-type: float64
        blinded_times:
          type: number
          description: среднее кол-во раз ослеплен за раунд
          format: double
          x-go-type: float64
        blinded_players:
          type: number
          description: средне кол-во ослепленных игроков за раунд
          format: double
          x-go-type: float64
      description: набор средних показателей за раунд
    PlayerStats:
      required:
      - basic
      - per_round
      - total
      type: object
      properties:
        basic:
          $ref: '#/components/schemas/BasicStats'
        total:
          $ref: '#/components/schemas/TotalStats'
        per_round:
          $ref: '#/components/schemas/PerRoundStats'
    WeaponStats:
      required:
      - assists
      - blind_kills
      - damage_dealt
      - damage_taken
      - deaths
      - flashbang_assists
      - headshot_kills
      - kills
      - noscope_kills
      - through_smoke_kills
      - wallbang_kills
      type: object
      properties:
        kills:
          type: integer
          format: uint32
          x-go-type: uint32
        deaths:
          type: integer
          format: uint32
          x-go-type: uint32
        headshot_kills:
          type: integer
          format: uint32
          x-go-type: uint32
        blind_kills:
          type: integer
          format: uint32
          x-go-type: uint32
        wallbang_kills:
          type: integer
          format: uint32
          x-go-type: uint32
        noscope_kills:
          type: integer
          format: uint32
          x-go-type: uint32
        through_smoke_kills:
          type: integer
          format: uint32
          x-go-type: uint32
        assists:
          type: integer
          format: uint32
          x-go-type: uint32
        damage_taken:
          type: integer
          format: uint32
          x-go-type: uint32
        damage_dealt:
          type: integer
          format: uint32
          x-go-type: uint32
    PlayerWeaponStats:
      type: array
      items:
        $ref: '#/components/schemas/PlayerWeaponStats_inner'
    PlayerWeaponClassStats:
      type: array
      items:
        $ref: '#/components/schemas/PlayerWeaponClassStats_inner'
    MatchTeam:
      required:
      - clan_name
      - flag_code
      - player_steam_ids
      - score
      type: object
      properties:
        clan_name:
          type: string
          description: название команды, берется из загруженной записи матча
        flag_code:
          type: string
          description: ISO 3166 код флага
        score:
          type: integer
          format: uint8
          x-go-type: uint8
        player_steam_ids:
          type: array
          items:
            type: integer
            format: uint64
            x-go-type: uint64
    Match:
      required:
      - map_name
      - match_duration
      - match_id
      - team1
      - team2
      - upload_time
      type: object
      properties:
        match_id:
          type: string
          format: uuid
          x-go-name: MatchID
          x-go-type: google_uuid.UUID
          x-go-type-import:
            name: google_uuid
            path: github.com/google/uuid
        map_name:
          type: string
        match_duration:
          type: integer
          format: int64
          x-go-type: time.Duration
        team1:
          $ref: '#/components/schemas/MatchTeam'
        team2:
          $ref: '#/components/schemas/MatchTeam'
        upload_time:
          type: string
          description: datetime RFC3339
          format: date-time
          x-go-type: time.Time
    MatchList:
      required:
      - matches
      - next_page_token
      type: object
      properties:
        matches:
          type: array
          items:
            $ref: '#/components/schemas/Match'
        next_page_token:
          type: string
          example: U3dhZ2dlciByb2Nrcw==
    SortOrder:
      type: string
      enum:
      - ASC
      - DESC
    PlayerMatchListSort:
      required:
      - upload_time
      type: object
      properties:
        upload_time:
          $ref: '#/components/schemas/SortOrder'
    PlayerMatchListRequest:
      required:
      - page_size
      - page_token
      - sort
      type: object
      properties:
        sort:
          $ref: '#/components/schemas/PlayerMatchListSort'
        page_size:
          type: integer
          format: uint16
          x-go-type: uint16
        page_token:
          type: string
          description: base64 string
          example: U3dhZ2dlciByb2Nrcw==
    WeaponStatsRequest:
      required:
      - weapon_class_id
      - weapon_id
      type: object
      properties:
        weapon_id:
          type: integer
          description: фильтр по имени оружия
          format: uint16
          x-go-type: uint16
          x-go-name: WeaponID
        weapon_class_id:
          type: integer
          description: фильтр по классу оружия
          format: uint8
          x-go-type: uint8
          x-go-name: WeaponClassID
    WeaponClassStatsRequest:
      required:
      - weapon_class
      type: object
      properties:
        weapon_class:
          type: string
          description: фильтр по классу оружия
    Weapon:
      required:
      - class
      - class_id
      - weapon
      - weapon_id
      type: object
      properties:
        weapon_id:
          type: integer
          format: uint16
          x-go-type: uint16
          x-go-name: WeaponID
        weapon:
          type: string
          description: имя оружия
        class_id:
          type: integer
          description: класс оружия в формате uint8, в котором хранится в базе
          format: uint8
          x-go-type: uint8
          x-go-name: ClassID
        class:
          type: string
          description: имя класса оружия
    WeaponList:
      type: array
      items:
        $ref: '#/components/schemas/Weapon'
    WeaponClassList:
      type: array
      items:
        $ref: '#/components/schemas/WeaponClass'
    WeaponClass:
      required:
      - class
      - id
      type: object
      properties:
        id:
          type: integer
          description: класс оружия в формате uint8, в котором хранится в базе
          format: uint8
          x-go-type: uint8
          x-go-name: ID
        class:
          type: string
          description: имя класса оружия
    PlayerWeaponStats_inner:
      required:
      - class
      - class_id
      - stats
      - weapon
      - weapon_id
      type: object
      properties:
        weapon_id:
          type: integer
          format: uint16
          x-go-type: uint16
          x-go-name: WeaponID
        weapon:
          type: string
        class_id:
          type: integer
          format: uint8
          x-go-type: uint8
          x-go-name: WeaponClassID
        class:
          type: string
        stats:
          $ref: '#/components/schemas/WeaponStats'
    PlayerWeaponClassStats_inner:
      required:
      - class
      - class_id
      - stats
      type: object
      properties:
        class_id:
          type: integer
          format: uint8
          x-go-type: uint8
          x-go-name: ClassID
        class:
          type: string
        stats:
          $ref: '#/components/schemas/WeaponStats'
  requestBodies:
    ReplayUploadRequestBody:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              replay:
                type: string
                description: запись матча в формате .dem, макс. размер 300 мб
                format: binary
      required: true
    PlayerMatchListRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PlayerMatchListRequest'
      required: true
    WeaponStatsRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WeaponStatsRequest'
      required: true
    WeaponClassStatsRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WeaponClassStatsRequest'
      required: true
